{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","handleFilterChange","newFilter","onChange","value","PersonForm","props","onSubmit","handleSubmit","handleNameChange","newName","handleNumberChange","newNumber","type","Person","person","handleDelete","name","number","onClick","Persons","peopleToShow","map","key","Notification","msg","error","className","baseUrl","axios","get","then","response","data","newPerson","post","id","delete","updatedPerson","put","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","notification","setNotification","isError","setIsError","useEffect","personService","updated","filter","toLowerCase","slice","length","event","target","preventDefault","includes","window","confirm","personToUpdate","find","p","setTimeout","catch","updatePerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.113728ba.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ handleFilterChange, newFilter}) => (\n    <div>\n        filter shown with\n        <input onChange={handleFilterChange} value={newFilter} />\n    </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => (\n    <form onSubmit={props.handleSubmit}>\n        <div>\n        name: \n        <input onChange={props.handleNameChange} value={props.newName}/>\n        </div>\n        <div>\n            number: \n            <input onChange={props.handleNumberChange} value={props.newNumber}/>\n        </div>\n        <div>\n        <button type=\"submit\">add</button>\n        </div>\n    </form>\n)\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ( { person, handleDelete }) => (\n    <p> \n        {person.name} {person.number}\n        <button onClick={handleDelete}>delete</button>\n    </p>\n)\n\nconst Persons = ({ peopleToShow, handleDelete }) => (\n    peopleToShow.map(person =>\n        <Person \n            key={person.name} \n            person={person} \n            handleDelete={handleDelete(person)}\n        />       \n    )\n)\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ msg, error=false }) => {\n    if (msg === null) return null\n\n    if (error) {\n        return <div className=\"error\">{msg}</div>\n    } else {\n        return <div className=\"success\">{msg}</div>\n    }\n    \n}\n\nexport default Notification","import axios from 'axios'\n\n//const baseUrl = 'http://localhost:3001/api/persons'\nconst baseUrl = 'https://shrouded-fjord-00506.herokuapp.com/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = updatedPerson => {\n    const request = axios.put(`${baseUrl}/${updatedPerson.id}`, updatedPerson)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\nimport './index.css'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ newFilter, setNewFilter ] = useState('')\n\n    const [ notification, setNotification ] = useState(null)\n    const [ isError, setIsError ] = useState(true)\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(updated => setPersons(updated))\n    }, [])\n\n    const addPerson = () => {\n        const newPerson = {\n            name: newName,\n            number: newNumber\n        }\n        personService\n            .create(newPerson)\n            .then(person => {\n                setPersons(persons.concat(person))\n                setNewName('')\n                setNewNumber('')\n                setNotification(`Added ${newName}`)\n                setIsError(false)\n                setTimeout(() => setNotification(null), 3000)\n            })\n    }\n\n    const updatePerson = () => {\n        const personToUpdate = persons.find(p => p.name === newName)\n        const updatedPerson = { ...personToUpdate, number: newNumber}\n        personService\n            .update(updatedPerson)\n            .then(person => {\n                setPersons(persons.map(p => \n                    p.id === personToUpdate.id ? person : p\n                ))\n                setNewName('')\n                setNewNumber('')\n                setNotification(`Updated number for ${newName}`)\n                setIsError(false)\n                setTimeout(() => setNotification(null), 3000)\n            })\n            .catch(error => {\n                setNotification(\n                    `Information of ${newName} has already been removed from server`\n                )\n                setIsError(true)\n                setTimeout(() => setNotification(null), 3000)\n                setPersons(persons.filter(p => p.id !== personToUpdate.id))\n            })\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        \n        if (persons.map(person => person.name).includes(newName)) {\n            const msg = `${newName} is already added to phonebook, replace the old number with a new one?`\n            if (window.confirm(msg)) {\n                updatePerson()\n            }\n        } else {\n            addPerson()\n        }\n    }\n\n    const handleFilterChange = (event) => {\n        setNewFilter(event.target.value)\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleDelete = person => {\n        return (() => {\n            if (window.confirm(`Delete ${person.name} ?`)) {\n                personService\n                    .remove(person.id)\n                    .then(() => {\n                        setPersons(persons.filter(p => p.id !== person.id))\n                        setNotification(`Removed ${person.name}`)\n                        setIsError(false)\n                        setTimeout(() => setNotification(null), 3000)\n                    })\n                    \n            }\n        })\n    }\n\n    const peopleToShow = persons.filter(person => {\n        return person.name.toLowerCase().slice(0,newFilter.length) === newFilter.toLowerCase()\n    })\n  \n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <Notification msg={notification} error={isError} />\n        <Filter \n            handleFilterChange={handleFilterChange} \n            newFilter={newFilter} \n        />\n        <h3>Add a new</h3>\n        <PersonForm \n            handleSubmit={handleSubmit}\n            handleNameChange={handleNameChange}\n            newName={newName}\n            handleNumberChange={handleNumberChange}\n            newNumber={newNumber}\n        />\n        <h3>Numbers</h3>\n        <Persons peopleToShow={peopleToShow} handleDelete={handleDelete} />\n      </div>\n    )\n  \n  }\n  \n  export default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}